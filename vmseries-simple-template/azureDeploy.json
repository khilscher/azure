{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Globally unique lowercase name of your storage account"
            },
	    "defaultValue":"paloalto"
        },
        "storageAccountType": {
            "type": "string",
	    "metadata": {
		"description": "The type of the Storage Account created"
	    },
	    "defaultValue":"Standard_LRS"
	},
        "storageAccountNewOrExisting" : {
            "type": "string",
            "defaultValue" : "new",
            "allowedValues" : [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "defaultValue" : "",
            "metadata": {
               "description": "Storage Resource Group of the Existing VM."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            },
	    "defaultValue":"khpalo1"
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            },
	    "defaultValue":"khpalo1"
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "adminPassword": {
            "type": "securestring",
	    "defaultValue": "Pal0Alt0!29",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "descritpion": "Type of authentication "
            },
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "defaultValue": "password"
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH rsa public key file as a string."
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4"
            ],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound DefaultNSG on eth0 (MGMT)"
            }
        },
        "baseUrl" : {
		"type" : "string",
		"metadata": {
			"artifactsBaseUrl": ""
		},
		"defaultValue": "https://raw.githubusercontent.com/saurabhtrekker/UI1/master"
	},
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network that the consumer wants to use"
      },
      "defaultValue": "core-wu-vnet"
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual network address CIDR"
      }
    },
    "subnet0Name": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "Subnet for the Mgmt"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "External",
      "metadata": {
        "description": "Subnet for External"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "DMZ",
      "metadata": {
        "description": "Subnet for the Trust"
      }
    },
    "subnet3Name": {
      "type": "string",
      "defaultValue": "CS",
      "metadata": {
        "description": "Subnet for the CS"
      }
    },
    "subnet4Name": {
      "type": "string",
      "defaultValue": "Inside",
      "metadata": {
        "description": "Subnet for Inside"
      }
    },	    
    "subnet0Prefix": {
      "type": "string",
      "defaultValue": "10.0.8.0/24",
      "metadata": {
        "description": ""
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": ""
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": ""
      }
    },
    "subnet3Prefix": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": ""
      }
    },
    "subnet4Prefix": {
      "type": "string",
      "defaultValue": "10.0.8.0/24",
      "metadata": {
        "description": ""
      }
    },
    "subnet0StartAddress": {
      "type": "string",
      "defaultValue": "10.0.8.4",
      "metadata": {
        "description": "Subnet start address"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "10.0.1.4",
      "metadata": {
        "description": "Subnet start address"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "10.0.2.4",
      "metadata": {
        "description": "Subnet start address"
      }
    },
    "subnet3StartAddress": {
      "type": "string",
      "defaultValue": "10.0.3.4",
      "metadata": {
        "description": "Subnet start address"
      }
    },
    "subnet4StartAddress": {
      "type": "string",
      "defaultValue": "10.0.8.4",
      "metadata": {
        "description": "Subnet start address"
      }
    }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "imagePublisher": "paloaltonetworks",
    	"imageSku" : "byol",
	"imageOffer" : "vmseries1",
        "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
        "FWPrivateIPAddress1": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddress2": "[parameters('subnet2StartAddress')]",
	"FWPrivateIPAddress3": "[parameters('subnet3StartAddress')]",
        "FWPrivateIPAddress4": "[parameters('subnet4StartAddress')]",
        "publicIPAddressType": "Dynamic",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
	"subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet3Name'))]",
        "subnet4Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet4Name'))]",    
	"storageAccountSetupURL" : "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
	"vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]"
    },
    "resources": [
    {
	"name": "storageAcountSetup1",
	"type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
	"properties" : {
		"mode": "Incremental",
		"templateLink" : {
		"uri" : "[variables('storageAccountSetupURL')]",
		"contentVersion": "1.0.0.0"
	},
	"parameters" : {
		"location": {
			"value": "[resourceGroup().location]"
		},
		"storageAccountType": {
			"value": "[parameters('storageAccountType')]"
		},
		"newStorageAccount" : {
			"value": "[parameters('newStorageAccount')]"
		},
		"storageAccountExistingRG": {
			"value": "[parameters('existingStorageAccountRG')]"
		}
	  }
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('fwpublicIPName')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
                "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
            }
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "location": "[resourceGroup().location]",
        "properties": {
            "securityRules": [{
                "name": "Allow-Outside-From-IP",
                "properties": {
                    "description": "Rule",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 100,
                    "direction": "Inbound"
                }
            }, {
                "name": "Allow-Intra",
                "properties": {
                    "description": "Allow intra network traffic",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 101,
                    "direction": "Inbound"
                }
            }, {
                "name": "Default-Deny",
                "properties": {
                    "description": "Default-Deny if we don't match Allow rule",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 200,
                    "direction": "Inbound"
                }
            }]
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]"
        ],
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[parameters('virtualNetworkAddressPrefix')]"
                ]
            },
            "subnets": [{
                "name": "[parameters('subnet0Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet0Prefix')]",
			"networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname-mgmt'))]"
                    }
                }
            }, {
                "name": "[parameters('subnet1Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet1Prefix')]"
                }
            },{
                "name": "[parameters('subnet2Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet2Prefix')]"
                }
            },{
                "name": "[parameters('subnet3Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet3Prefix')]"
                }
            }]
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'), '0')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '0')]"
        },
        "properties": {
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '0')]",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
                    },
                    "subnet": {
                        "id": "[variables(concat('subnet','0','Ref'))]"
                    }
                }
            }]
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'), '1')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '1')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '1')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddress1')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','1','Ref'))]"
                    }
                }
            }]
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'), '2')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '2')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '2')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddress2')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','2','Ref'))]"
                    }
                }
            }]
        }
    },{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'), '3')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '3')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '3')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddress3')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','3','Ref'))]"
                    }
                }
            }]
        }
    },{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('nicName'), '4')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '4')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '4')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddress4')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','4','Ref'))]"
                    }
                }
            }]
        }
    },
    {
      "name": "PAN-VM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
         "storageAcountSetup1",
         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '3')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '4')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[resourceGroup().location]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "imageSku": {
            "value": "[variables('imageSku')]"
          },
          "imageOffer": {
            "value": "[variables('imageOffer')]"
          },
          "imagePublisher": {
            "value": "[variables('imagePublisher')]"
          },
          "nicName": {
            "value": "[variables('nicName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "newStorageAccount": {
            "value": "[parameters('newStorageAccount')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          }
        }
      }
    }
  ]
}
